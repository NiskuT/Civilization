name: CI develop

on: 
  pull_request:
    branches:
      develop
  push:
    branches:
      develop

jobs:
  linux-debug:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install tools
      run: |
        sudo apt install lcov
        sudo apt install gcovr
        sudo apt install libboost-all-dev
        sudo apt install valgrind
        
    - name: Configure CMake

      run: |
        mkdir build && cd build
        cmake .. -DBUILD_CODE_COVERAGE=ON -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Debug

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build .

    - name: Tests
      working-directory: ${{github.workspace}}/build/test
      run: ctest --timeout 300

    - name: Run code coverage
      working-directory: ${{github.workspace}}/build
      run: cmake --build . --target code-coverage

    - name: Valgrind Memory check for program
      working-directory: ${{github.workspace}}/build/bin
      run: valgrind --leak-check=full --exit-on-first-error=yes --error-exitcode=1 ./client -hello

    - name: Valgrind Memory check for tests
      working-directory: ${{github.workspace}}/build/test
      run: valgrind --leak-check=full --exit-on-first-error=yes --error-exitcode=1 ctest --timeout 300

    - name: Doxygen to GH-pages
      uses: jard-111/doxygen-action@1.0
      if: ${{ github.event_name == 'push' }}
      with:
        doxyfile-path: "./docs/Doxyfile" 
        working-directory: "."

    - name: Add coverage to GH-pages
      if: ${{ github.event_name == 'push' }}
      run : |
        cp -r build/code-coverage html/code-coverage
    
    - name: Deploy
      uses: peaceiris/actions-gh-pages@v3
      if: ${{ github.event_name == 'push' }}
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./html
      

  linux-release:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Install tools
      run: sudo apt install libboost-all-dev
        
    - name: Configure CMake
      run: |
        mkdir build && cd build
        cmake .. -DBUILD_TESTING=ON -DCMAKE_BUILD_TYPE=Release

    - name: Build
      working-directory: ${{github.workspace}}/build
      run: cmake --build .

    - name: Tests
      working-directory: ${{github.workspace}}/build/test
      run: ctest --timeout 300
        
        
        

